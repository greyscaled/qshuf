{"version":3,"sources":["contexts/Page.tsx","styles/palette.ts","pages/About.tsx","contexts/List.tsx","pages/List.tsx","components/Content.tsx","components/Footer.tsx","components/Menu.tsx","hooks/event.tsx","App.tsx","styles/index.ts","index.tsx"],"names":["initialPageContext","createContext","undefined","usePageContext","displayName","Provider","name","val","useContext","Error","PageContextProvider","children","useState","page","setPage","value","COLORS","styles","stylesheet","root","border","display","maxWidth","padding","indent","marginLeft","code","backgroundColor","fontFamily","ABOUT_TEXT","title","content","About","className","map","idx","shuffle","array","randIdx","newArray","currentIdx","length","Math","floor","random","initialListContext","useListContext","ListContextProvider","location","useLocation","format","setFormat","listItems","_setListItems","formatted","useMemo","join","JSON","stringify","setListItems","useCallback","shuffleItems","useEffect","params","URLSearchParams","search","query","get","fmt","split","margin","List","style","marginTop","Content","bottom","color","flexDirection","left","position","right","link","fontSize","textDecoration","Footer","onClick","top","logo","btn","$nest","borderRadius","Menu","downloadSupported","firstBtnRef","useRef","Blob","e","console","info","type","listener","handleReformat","handleSlash","ev","key","altKey","ctrlKey","current","document","activeElement","blur","focus","handleCopy","textField","createElement","innerHTML","body","appendChild","select","execCommand","remove","window","alert","handleDownload","blob","saveAs","addEventListener","log","removeEventListener","ref","queryCommandSupported","App","cssRule","lineHeight","minHeight","minWidth","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71aef8dd.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\n/** Routeable 'Page' content */\ntype Page = \"about\" | \"list\";\n\ninterface PageContext {\n  /** The currently active content */\n  readonly page: \"about\" | \"list\";\n\n  setPage(page: Page): void;\n}\n\n/** @remark Do not export - created for convenience of usePageContext */\nconst initialPageContext = createContext<PageContext | undefined>(undefined);\n\n/** React hook for accessing the value of PageContext */\nexport const usePageContext = (): NonNullable<PageContext> => {\n  const displayName = initialPageContext.displayName || initialPageContext.Provider.name;\n\n  const val = useContext(initialPageContext);\n  if (!val) {\n    throw new Error(`Context Provider not found: ${displayName}`);\n  }\n\n  return val as NonNullable<PageContext>;\n};\n\nexport const PageContextProvider: React.FC = ({ children }) => {\n  const [page, setPage] = useState<Page>(\"list\");\n\n  return (\n    <initialPageContext.Provider\n      value={{\n        page,\n        setPage,\n      }}\n    >\n      {children}\n    </initialPageContext.Provider>\n  );\n};\n","/**\n * @link https://design.ubuntu.com/brand/colour-palette/\n * @link http://kristopolous.github.io/BOOTSTRA.386/index.html\n */\n\nexport const COLORS = {\n  // Ubuntu\n  aubergineLight: \"#77216F\",\n  aubergineMid: \"#5E2750\",\n  aubergineDark: \"#2C001E\",\n  greyWarm: \"#AEA79F\",\n  greyCool: \"#333333\",\n  greyText: \"#111111\",\n\n  // Common\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n\n  // Bootstra.386\n  bbgrey: \"#bbbbbb\",\n  blue: \"#000084\",\n\n  // Other\n  pinkBright: \"#ff77dc\",\n};\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { COLORS } from \"../styles/palette\";\n\nconst styles = stylesheet({\n  root: {\n    border: `1px solid ${COLORS.bbgrey}`,\n    display: \"inline-block\",\n    maxWidth: \"500px\",\n    padding: \"12px\",\n  },\n  indent: {\n    marginLeft: \"20px\",\n  },\n  code: {\n    backgroundColor: COLORS.greyCool,\n    fontFamily: \"monospace\",\n    padding: \"1px\",\n  },\n});\n\ninterface AboutText {\n  title: string;\n  content: string[];\n}\n\nconst ABOUT_TEXT: AboutText[] = [\n  {\n    title: \"Name\",\n    content: [\"QShuf - generate random permutations\"],\n  },\n  {\n    title: \"Synopsis\",\n    content: [\"q - A comma separated list\", \"fmt - json or text (default)\"],\n  },\n  {\n    title: \"Description\",\n    content: [\n      \"Have you been bogged down by manually entering data into terminal programs?\",\n      \"Spend less time in your terminal without leaving its look and feel.\",\n      \"Bookmark your queries today with the power of QShuf!\",\n    ],\n  },\n  {\n    title: \"Author\",\n    content: [\"Grey Barkans (@vapurrmaid)\"],\n  },\n  {\n    title: \"Reporting Bugs\",\n    content: [\"QShuf is 100% bug free 60% of the time\"],\n  },\n];\n\nexport const About: React.FC = () => (\n  <div className={styles.root}>\n    {ABOUT_TEXT.map(({ content, title }) => (\n      <div key={title}>\n        <strong>{title}</strong>\n\n        {content.map((value, idx) => (\n          <p className={styles.indent} key={idx}>\n            {value}\n          </p>\n        ))}\n      </div>\n    ))}\n  </div>\n);\n","import React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n/** Visual formats for display */\ntype ListFormat = \"json\" | \"text\";\n\ninterface ListContext {\n  /** The current format for visual display */\n  readonly format: ListFormat;\n  /** The list as a formatted string for display. The current format is used. */\n  readonly formatted: string;\n  /** A list of strings */\n  readonly listItems: string[];\n\n  setFormat(format: ListFormat): void;\n  setListItems(listItems: string[]): void;\n  shuffleItems(): void;\n}\n\n/**\n * A Knuth shuffle\n * @remark A new array is returned for convenience with React state\n */\nconst shuffle = (array: string[]): string[] => {\n  const newArray = [...array];\n  let currentIdx: number = array.length;\n  let value: string;\n  let randIdx: number;\n\n  while (currentIdx !== 0) {\n    randIdx = Math.floor(Math.random() * currentIdx);\n\n    currentIdx -= 1;\n    value = newArray[currentIdx];\n\n    newArray[currentIdx] = newArray[randIdx];\n    newArray[randIdx] = value;\n  }\n\n  return newArray;\n};\n\n/** @remark Do not export - created for convenience of useListContext */\nconst initialListContext = createContext<ListContext | undefined>(undefined);\n\n/** React hook for accessing the value of ListContextProvider */\nexport const useListContext = (): NonNullable<ListContext> => {\n  const displayName = initialListContext.displayName || initialListContext.Provider.name;\n\n  const val = useContext(initialListContext);\n  if (!val) {\n    throw new Error(`Context Provider not found: ${displayName}`);\n  }\n\n  return val as NonNullable<ListContext>;\n};\n\n/** A React Context Provider for ListContext */\nexport const ListContextProvider: React.FC = ({ children }) => {\n  const location = useLocation();\n  const [format, setFormat] = useState<ListFormat>(\"text\");\n  const [listItems, _setListItems] = useState<string[]>([]);\n\n  const formatted: string[] | string = useMemo(() => {\n    if (format === \"text\") return listItems.join(\"\\n\");\n    return JSON.stringify(listItems, undefined, 2);\n  }, [format, listItems]);\n\n  /** @remark wraps _setListItems with a shuffle */\n  const setListItems = useCallback((listItems: string[]) => {\n    _setListItems(shuffle(listItems));\n  }, []);\n\n  const shuffleItems = useCallback(() => {\n    setListItems(shuffle(listItems));\n  }, [listItems, setListItems]);\n\n  // Parses q and fmt from query params\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const query = params.get(\"q\");\n    const fmt = params.get(\"fmt\");\n\n    if (query) {\n      setListItems(query.split(\",\"));\n    }\n\n    if (fmt === \"json\") {\n      setFormat(\"json\");\n    }\n  }, [location, setListItems]);\n\n  return (\n    <initialListContext.Provider\n      value={{\n        format,\n        formatted,\n        listItems,\n        setFormat,\n        setListItems,\n        shuffleItems,\n      }}\n    >\n      {children}\n    </initialListContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { useListContext } from \"../contexts/List\";\n\nconst styles = stylesheet({\n  root: {\n    margin: \"50px 0\",\n  },\n});\n\nexport const List: React.FC = () => {\n  const { formatted } = useListContext();\n\n  return (\n    <div className={styles.root}>\n      <pre style={{ marginTop: \"10px\" }}>{formatted}</pre>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { usePageContext } from \"../contexts/Page\";\nimport { About } from \"../pages/About\";\nimport { List } from \"../pages/List\";\n\nconst styles = stylesheet({\n  root: {\n    margin: \"50px 0\",\n  },\n});\n\n/**\n * Applies a margin offset to body content between fixed header/footer\n * @remark There is a HUGE routing hack in this component - ie using a context\n * to route content versus a straight Router. The reason for doing so is that\n * this site belongs to a subpath vapurrmaid.github.io. Routing outside of \"/\"\n * leads to a 404 if the page is bookmarked or refreshed etc.\n */\nexport const Content: React.FC = () => {\n  const { page } = usePageContext();\n\n  let content = <List />;\n  if (page === \"about\") {\n    content = <About />;\n  }\n\n  return <div className={styles.root}>{content}</div>;\n};\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { useListContext } from \"../contexts/List\";\nimport { usePageContext } from \"../contexts/Page\";\nimport { COLORS } from \"../styles/palette\";\n\nconst styles = stylesheet({\n  root: {\n    backgroundColor: COLORS.aubergineDark,\n    bottom: 0,\n    color: COLORS.greyWarm,\n    display: \"flex\",\n    flexDirection: \"row\",\n    left: 0,\n    padding: \"5px\",\n    position: \"fixed\",\n    right: 0,\n  },\n  link: {\n    backgroundColor: \"inherit\",\n    border: \"none\",\n    color: COLORS.pinkBright,\n    fontFamily: \"inherit\",\n    fontSize: \"inherit\",\n    padding: 0,\n    textDecoration: \"none\",\n  },\n});\n\nexport const Footer: React.FC = () => {\n  const { page, setPage } = usePageContext();\n  const { listItems } = useListContext();\n\n  return (\n    <div className={styles.root}>\n      <button className={styles.link} onClick={() => setPage(page === \"about\" ? \"list\" : \"about\")}>\n        {page === \"about\" ? \"Back\" : \"About\"}\n      </button>\n      <span style={{ marginLeft: \"10px\" }}>{`Count: ${listItems.length}`}</span>\n    </div>\n  );\n};\n","import { saveAs } from \"file-saver\";\nimport React, { useCallback, useRef } from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { useListContext } from \"../contexts/List\";\nimport { useWindowEventListener } from \"../hooks/event\";\nimport { COLORS } from \"../styles/palette\";\n\nconst styles = stylesheet({\n  root: {\n    backgroundColor: COLORS.aubergineDark,\n    color: COLORS.greyWarm,\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"5px\",\n    position: \"fixed\",\n    left: 0,\n    right: 0,\n    top: 0,\n  },\n  logo: {\n    color: COLORS.pinkBright,\n  },\n  btn: {\n    backgroundColor: \"inherit\",\n    border: \"none\",\n    color: COLORS.greyWarm,\n    fontFamily: \"inherit\",\n    fontSize: \"inherit\",\n    marginLeft: \"10px\",\n    $nest: {\n      \"&:active, &:focus, &:hover\": {\n        backgroundColor: \"black\",\n        borderRadius: \"1px\",\n        color: \"#bbbbbb\",\n      },\n    },\n  },\n});\n\nexport const Menu: React.FC = () => {\n  const { format, formatted, setFormat, shuffleItems } = useListContext();\n  const firstBtnRef = useRef<HTMLButtonElement>(null);\n\n  let downloadSupported: boolean | undefined;\n  try {\n    downloadSupported = !!new Blob();\n  } catch (e) {\n    console.info(\"File download is not supported\", e);\n  }\n\n  const handleReformat = useCallback(() => {\n    if (format === \"json\") {\n      setFormat(\"text\");\n    } else {\n      setFormat(\"json\");\n    }\n  }, [format, setFormat]);\n\n  const handleSlash = useCallback((ev: KeyboardEvent) => {\n    if (ev.key === \"/\" && !ev.altKey && !ev.ctrlKey && firstBtnRef.current) {\n      if (document.activeElement === firstBtnRef.current) {\n        firstBtnRef.current.blur();\n      } else {\n        firstBtnRef.current.focus();\n      }\n    }\n  }, []);\n\n  const handleCopy = useCallback(() => {\n    const textField = document.createElement(\"textarea\");\n    textField.innerHTML = formatted;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n    window.alert(\"Copied!\");\n  }, [formatted]);\n\n  const handleDownload = useCallback(() => {\n    const type = format === \"json\" ? \"application/json\" : \"text/plain\";\n    const blob = new Blob([formatted], { type: `${type};charset=utf-8` });\n    saveAs(blob, format === \"json\" ? \"qshuf.json\" : \"qshuf.txt\");\n  }, [format, formatted]);\n\n  useWindowEventListener(\"keydown\", handleSlash);\n\n  return (\n    <div className={styles.root}>\n      <span className={styles.logo}>QShuf</span>\n      <button className={styles.btn} onClick={shuffleItems} ref={firstBtnRef}>\n        Shuffle\n      </button>\n      <button className={styles.btn} onClick={handleReformat}>\n        {`Format: ${format}`}\n      </button>\n      {document.queryCommandSupported(\"copy\") && (\n        <button className={styles.btn} onClick={handleCopy}>\n          {`Copy ${format === \"json\" ? \"JSON\" : \"Text\"}`}\n        </button>\n      )}\n      {downloadSupported && (\n        <button className={styles.btn} onClick={handleDownload}>\n          Download\n        </button>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\n\nexport const useWindowEventListener = <T extends keyof WindowEventMap>(\n  type: T,\n  listener: (ev: WindowEventMap[T]) => void\n): void => {\n  useEffect(() => {\n    window.addEventListener(type, listener);\n    return () => {\n      console.log(\"unmounting\");\n      window.removeEventListener(type, listener);\n    };\n  }, [type, listener]);\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Content } from \"./components/Content\";\nimport { Footer } from \"./components/Footer\";\nimport { Menu } from \"./components/Menu\";\nimport { ListContextProvider } from \"./contexts/List\";\nimport { PageContextProvider } from \"./contexts/Page\";\n\nexport const App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <ListContextProvider>\n        <PageContextProvider>\n          <Menu />\n          <Switch>\n            <Route>\n              {/* See Content - This is a routing hack :( */}\n              <Content />\n            </Route>\n          </Switch>\n          <Footer />\n        </PageContextProvider>\n      </ListContextProvider>\n    </BrowserRouter>\n  );\n};\n","import { cssRule } from \"typestyle\";\nimport { COLORS } from \"./palette\";\n\ncssRule(\"body\", {\n  backgroundColor: COLORS.aubergineMid,\n  color: COLORS.bbgrey,\n  fontFamily: \"DOS, Monaco, Menlo, Consolas, Courier New, monospace\",\n  fontSize: \"18px\",\n  lineHeight: \"20px\",\n});\n\ncssRule(\"html, body\", {\n  margin: 0,\n  minHeight: \"500px\",\n  minWidth: \"320px\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}